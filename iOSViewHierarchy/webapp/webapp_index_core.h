//
//  webapp_index_core.h
//  iOSHierarchyViewer
//
//
// THIS FILE IS GENERATED AUTOMATICALLY BY XCODE's script
//
//

#ifndef iOSHierarchyViewer_webapp_index_core 
#define iOSHierarchyViewer_webapp_index_core 

#define WEBAPP_INDEX_CORE @""

#endif
